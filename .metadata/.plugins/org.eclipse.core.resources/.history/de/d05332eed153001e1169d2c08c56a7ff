package com.onlinesales;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.Scanner;

public class MainSimulator {

	private Map<String,Double> events = new LinkedHashMap<String, Double>();
	
	public boolean addEvent(String event,double probabilty) {
		if(isEventPresent(event)) {
			return false;
		}else {
			return events.put(event, probabilty) == null;
		}
	}
	
	
	
	public boolean isEventPresent(String event) {
		return events.containsKey(event);
	}
	
	
	public int getNumberOfEvent() {
		return events.size();
	}
	
	
	public List<String> getEvents(){
		return new ArrayList<String>(events.keySet());
	}
	
	public double[] getProbablityArray() {
		
		double[] probablityConvertedToPercentage = new double[getNumberOfEvent()];
		
		double total = 0.0;
		
		int i = 0;
		
		List<Double> probalityGiven = events.values().stream().toList();
		
		for(double probality:probalityGiven) {
			total += probality; 
		}
		
		for(double probality:probalityGiven) {
			total += probality;
		}
		
		return probablityConvertedToPercentage;
		
	}
	
	public Map<String,Integer> getResult(int s){
		
		int[] countOfEvent = new int[getNumberOfEvent()];
		
		double[] probalityArray = getProbablityArray();
		
		System.out.println(Arrays.toString(countOfEvent));
		System.out.println(Arrays.toString(probalityArray));
		
		Random random = new Random();
		
		for(int i=0;i<s;i++) {
			
			double randDouble = Math.random()*100;
			double summedProbability = 0.0;
			
			for(int j=0;j<getNumberOfEvent();j++) {
				
				summedProbability+=probalityArray[j];
				
				if(randDouble<summedProbability) {
					
					countOfEvent[j]++;
					break;
					
				}
				
			}
			
		}
		
		
		System.out.println(Arrays.toString(countOfEvent));
		Map<String,Integer> result = new HashMap<String, Integer>();
        
		for(int i=0;i<countOfEvent.length;i++) {
			
			result.put(getEvents().get(i),countOfEvent[i]);
			
		}
		
		return result;

	}
	
	
}


